service: utec-diagram-api
org: brandolc18

frameworkVersion: "3"

provider:
  name: aws
  runtime: python3.11
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  timeout: 30 # Timeout global para todas las funciones (30 segundos)
  memorySize: 512 # Memoria global para todas las funciones (512 MB)
  role: arn:aws:iam::248056481657:role/LabRole
  environment:
    S3_BUCKET_NAME: ${self:service}-diagrams-${self:provider.stage}
    DIAGRAMS_TABLE: ${self:service}-metadata-${self:provider.stage}
    JWT_SECRET: ${env:JWT_SECRET, 'your-default-secret-key'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
      Resource: arn:aws:s3:::${self:provider.environment.S3_BUCKET_NAME}/*
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:Scan
        - dynamodb:Query
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DIAGRAMS_TABLE}

functions:
  # Funci贸n para generar diagramas de AWS
  generateAwsDiagram:
    handler: src/functions/aws_diagrams.generate
    timeout: 30
    memorySize: 1024
    events:
      - http:
          path: /diagrams/aws
          method: post
          cors: true

  # Funci贸n para generar diagramas ER (temporalmente deshabilitada)
  # generateErDiagram:
  #   handler: src/functions/er_diagrams.generate
  #   timeout: 30
  #   memorySize: 1024
  #   events:
  #     - http:
  #         path: /diagrams/er
  #         method: post
  #         cors: true

  # Funci贸n para generar diagramas JSON
  generateJsonDiagram:
    handler: src/functions/json_diagrams.generate
    timeout: 30
    memorySize: 1024
    events:
      - http:
          path: /diagrams/json
          method: post
          cors: true

  # Funci贸n para listar diagramas de un usuario
  listDiagrams:
    handler: src/functions/list_diagrams.handler
    timeout: 30
    memorySize: 512
    events:
      - http:
          path: /diagrams
          method: get
          cors: true

resources:
  Resources:
    # Bucket S3 para almacenar diagramas
    DiagramsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.S3_BUCKET_NAME}
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - "*"
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              AllowedOrigins:
                - "*"

    # Tabla DynamoDB para metadatos de diagramas
    DiagramsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DIAGRAMS_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: UserIdIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
            Projection:
              ProjectionType: ALL

plugins:
  - serverless-python-requirements
  - serverless-dotenv-plugin

custom:
  pythonRequirements:
    dockerizePip: true
